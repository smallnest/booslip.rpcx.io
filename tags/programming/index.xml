<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on 竹简书摘</title><link>https://booslip.rpcx.io/tags/programming/</link><description>Recent content in Programming on 竹简书摘</description><generator>Hugo</generator><language>zh-CN</language><copyright>鸟窝</copyright><lastBuildDate>Wed, 01 Jan 2025 23:33:11 +0800</lastBuildDate><atom:link href="https://booslip.rpcx.io/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Tidy First</title><link>https://booslip.rpcx.io/posts/tidy-first/</link><pubDate>Wed, 01 Jan 2025 23:33:11 +0800</pubDate><guid>https://booslip.rpcx.io/posts/tidy-first/</guid><description>&lt;p>这本书的作者是谁？肯特·贝克 (Kent Beck) 。肯特·贝克 (Kent Beck) 是谁？
他是最早研究软件开发的模式和重构的人之一，软件工程领域泰斗，敏捷开发的开创者之一，更是极限编程和测试驱动开发的创始人，同时还是JUnit 的作者，&lt;/p></description></item><item><title>The Rules of Programming</title><link>https://booslip.rpcx.io/posts/the-rules-of-programming/</link><pubDate>Wed, 01 Jan 2025 22:58:50 +0800</pubDate><guid>https://booslip.rpcx.io/posts/the-rules-of-programming/</guid><description>&lt;p>这份规则摘自克里斯·齐默曼的《编程规则：如何编写更好的代码》一书。书中作者结合其在微软和Sucker Punch游戏公司的编程团队管理经验，总结出一系列编程原则，旨在帮助程序员编写更简洁、易于测试和维护的代码。这些原则涵盖了代码简洁性、算法选择、测试策略、团队协作、代码审查以及代码重构等多个方面，并通过具体的代码示例和案例分析进行阐述。 书中还讨论了如何处理代码复杂性，以及如何平衡渐进式改进和彻底重构之间的关系。&lt;/p></description></item></channel></rss>